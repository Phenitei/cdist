#!/bin/sh -e
#
# 2012 Steven Armstrong (steven-cdist at armstrong.cc)
# 2014 Nico Schottelius (nico-cdist at schottelius.org)
# 2019 Dennis Camera (dennis.camera at ssrq-sds-fds.ch)
#
# This file is part of cdist.
#
# cdist is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# cdist is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with cdist. If not, see <http://www.gnu.org/licenses/>.
#

not_supported() {
    echo "Your operating system ($os) is currently not supported by this type (${__type##*/})." >&2
    echo "Please contribute an implementation for it if you can." >&2
    exit 1
}

set_hostname_systemd() {
    echo "$1" | __file /etc/hostname --source -
}

os=$(cat "$__global/explorer/os")
max_len=$(cat "$__object/explorer/max_len")
has_hostnamectl=$(cat "$__object/explorer/has_hostnamectl")

if test -s "$__object/parameter/name"
then
    name_should=$(cat "$__object/parameter/name")
else
    case $os
    in
        # RedHat-derivatives and BSDs
        centos|fedora|redhat|scientific|freebsd|netbsd|openbsd)
            # Hostname is FQDN
            name_should="${__target_host}"
        ;;
        *)
            # Hostname is only first component of FQDN
            name_should="${__target_host%%.*}"
        ;;
    esac
fi

if test -n "${max_len}" -a "$(printf '%s' "${name_should}" | wc -c)" -gt "${max_len}"
then
    printf "Host name too long. Up to %u characters allowed.\n" "${max_len}" >&2
    exit 1
fi

case $os
in
    alpine|debian|devuan|ubuntu|void)
        echo "$name_should" \
            | __file /etc/hostname --source -
    ;;
    macosx)
        # handled in gencode-remote
        :
    ;;
    archlinux)
        if test -n "$has_hostnamectl"
        then
            set_hostname_systemd "$name_should"
        else
            # Only for ancient ArchLinux, write to /etc/rc.conf on pre-systemd
            # versions.
            __key_value sysconfig-hostname \
                --file /etc/rc.conf \
                --delimiter '=' --exact_delimiter \
                --key 'HOSTNAME' \
                --value "\"$name_should\""
        fi
        ;;
    centos|fedora|redhat|scientific)
        if test -z "$has_hostnamectl"
        then
            # Only write to /etc/sysconfig/network on non-systemd versions.
            # On systemd-based versions this entry is ignored.
            __key_value sysconfig-hostname \
                --file /etc/sysconfig/network \
                --delimiter '=' --exact_delimiter \
                --key HOSTNAME \
                --value "\"$name_should\""
        else
            set_hostname_systemd "$name_should"
        fi
    ;;
    gentoo)
        if test -z "$has_hostnamectl"
        then
            # Only write to /etc/conf.d/hostname on OpenRC-based installations.
            # On systemd use hostnamectl(1) in gencode-remote.
            __key_value confd-hostname \
                --file /etc/conf.d/hostname \
                --delimiter '=' --exact_delimiter \
                --key 'hostname' \
                --value "\"$name_should\""
        else
            set_hostname_systemd "$name_should"
        fi
    ;;
    freebsd)
        __key_value rcconf-hostname \
            --file /etc/rc.conf \
            --delimiter '=' --exact_delimiter \
            --key 'hostname' \
            --value "\"$name_should\""
    ;;
    netbsd)
        __key_value rcconf-hostname \
            --file /etc/rc.conf \
            --delimiter '=' --exact_delimiter \
            --key 'hostname' \
            --value "\"$name_should\""

        # To avoid confusion, ensure that the hostname is only stored once
        __file /etc/myname --state absent
    ;;
    openbsd)
        echo "$name_should" \
            | __file /etc/myname --source -
    ;;
    suse)
        # We write into /etc/HOSTNAME for backwards-compatibility.  Modern SuSE
        # has hostnamectl anyway and symlinks /etc/HOSTNAME to /etc/hostname.
        echo "$name_should" \
            | __file /etc/HOSTNAME --source -
    ;;
    *)
        # On other operating systems we fall back to systemd's hostnamectl if availableâ€¦
        if test -n "$has_hostnamectl"
        then
            set_hostname_systemd "$name_should"
        else
            not_supported
        fi
    ;;
esac
